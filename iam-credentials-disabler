#!/usr/bin/env bash

mode=$1

log_append() {
  level=$1
  text=$2
  if [[ "$verbose" == "true" ]] || [[ "$level" == "info" ]]; then
    output="$output$text"
  fi
}

generate_report() {
  # the generate-credential-report command returns before the actual report is
  # available for download
  while aws iam generate-credential-report | jq -e -r '.State != "COMPLETE"' >/dev/null; do
    echo ">>> waiting for new report..."
    sleep 5
  done

  aws iam get-credential-report | jq -r '.Content' | base64 -d >"$report"
}

detect_unused_keys() {
  number=$1
  active=$(echo "$user" | jq -r ".access_key_${number}_active")
  if [[ $active == true ]]; then
    last_used=$(echo "$user" | jq -r ".access_key_${number}_last_used_date")
    if [[ $last_used == "N/A" || "$(date -d "$last_used" +"%s")" -lt "$expiry" ]]; then
      log_append debug "  Unused key detected in the credentials report (access_key_${number}: $last_used)\n"
      log_append debug "  Inspecting user's keys with the API\n"
      inspect_user
    else
      log_append debug "  access_key_${number} is active and used: ($last_used)\n"
    fi
  fi
}

inspect_user() {
  for key in $(aws iam list-access-keys --user-name "${name}" | jq -rc '.AccessKeyMetadata[] | select(.Status == "Active")'); do
    id=$(echo "$key" | jq -r ".AccessKeyId")
    last_used=$(aws iam get-access-key-last-used --access-key-id "${id}" | jq -r '.AccessKeyLastUsed.LastUsedDate')
    if [[ "$last_used" == "null" ]]; then
      created=$(echo "$key" | jq -r ".CreateDate")
      if [[ "$(date -d "$created" +"%s")" -lt "$expiry" ]]; then
        log_append info "    access_key ${id} never used on an old user ($created)\n"
        log_append info "    DELETED $id access key\n"
        aws iam delete-access-key --user-name "${name}" --access-key-id "${id}"
      else
        log_append debug "    access_key ${id} never used, but created recently ($created)\n"
      fi
    elif [[ "$(date -d "$last_used" +"%s")" -lt "$expiry" ]]; then
      log_append info "    access_key ${id} unused recently ($last_used)\n"
      log_append info "    DELETED $id access key\n"
      aws iam delete-access-key --user-name "${name}" --access-key-id "${id}"
    else
      log_append debug "    access_key ${id} used recently ($last_used)\n"
    fi
  done
  user_inspected=true
}

check_login() {
  [[ "$name" =~ "root_account" ]] && return # skip root account

  enabled=$(echo "$user" | jq -r '.password_enabled')
  if [[ "$enabled" == "true" ]]; then
    last_used=$(echo "$user" | jq -r ".password_last_used")
    if [[ $last_used == "N/A" ]]; then
      created=$(echo "$user" | jq -r ".user_creation_time")
      if [[ "$(date -d "$created" +"%s")" -lt "$expiry" ]]; then
        log_append info "  login never used on an old user ($created)\n"
        log_append info "  DELETED $name's login profile\n"
        aws iam delete-login-profile --user-name "${name}"
      else
        log_append debug "  login profile never used, but user created recently ($created)\n"
      fi
    else
      if [[ "$(date -d "$last_used" +"%s")" -lt "$expiry" ]]; then
        log_append info "  login profile unused recently ($last_used)\n"
        log_append info "  DELETED $name's login profile\n"
        aws iam delete-login-profile --user-name "${name}"
      else
        log_append debug "  login profile used recently ($last_used)\n"
      fi
    fi
  fi
}

if [[ "$mode" == "--verbose" ]]; then
  verbose=true
else
  verbose=false
fi

expiry=$(date +%s -d "90 days ago")
report=aws-report.csv

generate_report

headers="$(head -n1 "$report")"
counter=1
for user in $(yq "$report" -ojson | jq -rc '.[]'); do
  name=$(echo "$user" | jq -r '.user')
  output=""

  check_login

  user_inspected=false
  counter=1
  while [[ "$headers" == *"access_key_${counter}"* && "$user_inspected" == "false" ]]; do
    detect_unused_keys "$counter"
    ((counter++))
  done

  if [[ "$output" != "" ]]; then
    printf "$name\n"
    printf "$output"
  fi
done
